{"ast":null,"code":"import { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Signal } from \"./Signal\";\n/**\n * Multiply two incoming signals. Or, if a number is given in the constructor,\n * multiplies the incoming signal by that value.\n *\n * @example\n * // multiply two signals\n * const mult = new Tone.Multiply();\n * const sigA = new Tone.Signal(3);\n * const sigB = new Tone.Signal(4);\n * sigA.connect(mult);\n * sigB.connect(mult.factor);\n * // output of mult is 12.\n * @example\n * // multiply a signal and a number\n * const mult = new Tone.Multiply(10);\n * const sig = new Tone.Signal(2).connect(mult);\n * // the output of mult is 20.\n * @category Signal\n */\nexport class Multiply extends Signal {\n  constructor() {\n    super(Object.assign(optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"])));\n    this.name = \"Multiply\";\n    /**\n     * Indicates if the value should be overridden on connection\n     */\n    this.override = false;\n    const options = optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"]);\n    this._mult = this.input = this.output = new Gain({\n      context: this.context,\n      minValue: options.minValue,\n      maxValue: options.maxValue\n    });\n    this.factor = this._param = this._mult.gain;\n    this.factor.setValueAtTime(options.value, 0);\n  }\n  static getDefaults() {\n    return Object.assign(Signal.getDefaults(), {\n      value: 0\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._mult.dispose();\n    return this;\n  }\n}","map":{"version":3,"names":["Gain","optionsFromArguments","Signal","Multiply","constructor","Object","assign","getDefaults","arguments","name","override","options","_mult","input","output","context","minValue","maxValue","factor","_param","gain","setValueAtTime","value","dispose"],"sources":["../../../Tone/signal/Multiply.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,IAAI,QAAQ,sBAAsB;AAE3C,SAASC,oBAAoB,QAAQ,uBAAuB;AAC5D,SAASC,MAAM,QAAuB,UAAU;AAGhD;;;;;;;;;;;;;;;;;;;AAmBA,OAAM,MAAOC,QAA4D,SAAQD,MAAgB;EAkChGE,YAAA;IACC,KAAK,CAACC,MAAM,CAACC,MAAM,CAACL,oBAAoB,CAACE,QAAQ,CAACI,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAjChF,KAAAC,IAAI,GAAW,UAAU;IAElC;;;IAGS,KAAAC,QAAQ,GAAG,KAAK;IA6BxB,MAAMC,OAAO,GAAGV,oBAAoB,CAACE,QAAQ,CAACI,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,OAAO,CAAC,CAAC;IAElF,IAAI,CAACI,KAAK,GAAG,IAAI,CAACC,KAAK,GAAG,IAAI,CAACC,MAAM,GAAG,IAAId,IAAI,CAAC;MAChDe,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,QAAQ,EAAEL,OAAO,CAACK,QAAQ;MAC1BC,QAAQ,EAAEN,OAAO,CAACM;KAClB,CAAC;IAEF,IAAI,CAACC,MAAM,GAAG,IAAI,CAACC,MAAM,GAAG,IAAI,CAACP,KAAK,CAACQ,IAAkC;IACzE,IAAI,CAACF,MAAM,CAACG,cAAc,CAACV,OAAO,CAACW,KAAK,EAAE,CAAC,CAAC;EAC7C;EAEA,OAAOf,WAAWA,CAAA;IACjB,OAAOF,MAAM,CAACC,MAAM,CAACJ,MAAM,CAACK,WAAW,EAAE,EAAE;MAC1Ce,KAAK,EAAE;KACP,CAAC;EACH;EAEAC,OAAOA,CAAA;IACN,KAAK,CAACA,OAAO,EAAE;IACf,IAAI,CAACX,KAAK,CAACW,OAAO,EAAE;IACpB,OAAO,IAAI;EACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}