{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 화면 생성 뷰 \"), _createElementVNode(\"div\", null, [_createCommentVNode(\" 클릭시 함수실행 \"), _createVNode(_component_v_btn, {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.helloworld())\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"안녕하세요\")]),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" vue가 제공하는 반복문, students의 배열이 하나씩 student변수에 저장 \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.students, student => {\n    return _openBlock(), _createElementBlock(\"div\", null, [_createTextVNode(_toDisplayString(student) + \" \", 1 /* TEXT */), _createCommentVNode(\" student 변수 출력 \")]);\n  }), 256 /* UNKEYED_FRAGMENT */)), _createCommentVNode(\" studentFilter()의 리턴값이 하나씩 student변수에 저장\"), _createCommentVNode(\" :클래스 => 해당조건 만족시 기본클래스(stduent) 옆에 새로운 이름(old)이 붙음 (student old)\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.studentFilter(), student => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: _normalizeClass([\"student\", {\n        old: student.age >= 40\n      }])\n    }, _toDisplayString(student.name), 3 /* TEXT, CLASS */);\n  }), 256 /* UNKEYED_FRAGMENT */)), _createCommentVNode(\" onoff가 참이면 실행 \"), _ctx.onoff ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \"테스트\")) : _createCommentVNode(\"v-if\", true)])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["_createCommentVNode","_createElementVNode","_createVNode","_component_v_btn","onClick","_cache","$event","_ctx","helloworld","_createElementBlock","_Fragment","_renderList","students","student","studentFilter","class","_normalizeClass","old","age","name","onoff","_hoisted_1"],"sources":["/Users/yundayoung/Desktop/workspace/helloworld/src/views/HomeView.vue"],"sourcesContent":["<template> <!-- 화면 생성 뷰 -->\n  <div>\n    <!-- 클릭시 함수실행 -->\n    <v-btn @click=\"helloworld()\">안녕하세요</v-btn>\n\n    <!-- vue가 제공하는 반복문, students의 배열이 하나씩 student변수에 저장 -->\n    <div v-for=\"student in students\">\n      {{ student }} <!-- student 변수 출력 -->\n    </div>\n    <!-- studentFilter()의 리턴값이 하나씩 student변수에 저장-->\n    <!-- :클래스 => 해당조건 만족시 기본클래스(stduent) 옆에 새로운 이름(old)이 붙음 (student old)-->\n    <div v-for=\"student in studentFilter()\" class=\"student\" \n    :class=\"{old:student.age>=40}\">\n      {{ student.name }}\n    </div>\n\n    <!-- onoff가 참이면 실행 -->\n    <div v-if=\"onoff\">테스트</div>\n\n  </div>\n</template>\n\n<!-- 화면 컨트롤러 -->\n<script>\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  name: 'HomeView',\n  data() { // 변수 선언\n    return {\n      onoff : true,\n      // students:[\"김보미\", \"김세민\", \"김혜현\", \"나호윤\"] // 배열 생성\n    \n      students : [\n        {name: \"김보미\", age: 20},\n        {name: \"김세민\", age: 30},\n        {name: \"김혜현\", age: 40},\n        {name: \"나호윤\", age: 50}\n      ]\n    }\n  }, \n  methods:{ // 메소드 생성\n    helloworld() {\n      // this.students.push(\"학생\"+ Math.random()) // students 배열에 값추가\n      // this.onoff = !this.onoff\n      this.$router.push(\"/helloworld\") // 함수 실행 시 해당 URL 경로로 이동\n    },\n\n    studentFilter() {\n      var returnArr = []\n      if(this.onoff==true) {\n        this.students.forEach(student=>{\n          returnArr.push(student)\n        })\n      }\n      // 학생의 나이가 40미만인 학생만 반환\n      else {\n        this.students.forEach(student=>{\n          if(student.age<40) {\n            returnArr.push(student)\n          }\n        })\n      }\n      return returnArr\n    }\n  }\n});\n</script>\n\n<!-- CSS -->\n<style>\n  .student {\n    font-size:20px;\n    margin-bottom:10px\n  }\n\n  .student.old {\n    color: red;\n  }\n\n</style>"],"mappings":";;;;;;6DAACA,mBAAA,aAAgB,EACfC,mBAAA,CAkBM,cAjBJD,mBAAA,cAAiB,EACjBE,YAAA,CAA0CC,gBAAA;IAAlCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,UAAU;;sBAAI,MAAK,C,iBAAL,OAAK,E;;MAElCR,mBAAA,oDAAuD,G,kBACvDS,mBAAA,CAEMC,SAAA,QAAAC,WAAA,CAFiBJ,IAAA,CAAAK,QAAQ,EAAnBC,OAAO;yBAAnBJ,mBAAA,CAEM,c,kCADDI,OAAO,IAAG,GAAC,iBAAAb,mBAAA,mBAAsB,C;oCAEtCA,mBAAA,4CAA+C,EAC/CA,mBAAA,qEAAwE,G,kBACxES,mBAAA,CAGMC,SAAA,QAAAC,WAAA,CAHiBJ,IAAA,CAAAO,aAAa,IAAxBD,OAAO;yBAAnBJ,mBAAA,CAGM;MAHkCM,KAAK,EAAAC,eAAA,EAAC,SAAS;QAAAC,GAAA,EAC1CJ,OAAO,CAACK,GAAG;MAAA;wBACnBL,OAAO,CAACM,IAAI;oCAGjBnB,mBAAA,mBAAsB,EACXO,IAAA,CAAAa,KAAK,I,cAAhBX,mBAAA,CAA2B,OAAAY,UAAA,EAAT,KAAG,K"},"metadata":{},"sourceType":"module","externalDependencies":[]}