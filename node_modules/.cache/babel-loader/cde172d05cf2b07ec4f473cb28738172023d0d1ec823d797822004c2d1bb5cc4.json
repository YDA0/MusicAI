{"ast":null,"code":"import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { GreaterThan } from \"../../signal/GreaterThan\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { Follower } from \"../analysis/Follower\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { dbToGain, gainToDb } from \"../../core/type/Conversions\";\n/**\n * Gate only passes a signal through when the incoming\n * signal exceeds a specified threshold. It uses [[Follower]] to follow the ampltiude\n * of the incoming signal and compares it to the [[threshold]] value using [[GreaterThan]].\n *\n * @example\n * const gate = new Tone.Gate(-30, 0.2).toDestination();\n * const mic = new Tone.UserMedia().connect(gate);\n * // the gate will only pass through the incoming\n * // signal when it's louder than -30db\n * @category Component\n */\nexport class Gate extends ToneAudioNode {\n  constructor() {\n    super(Object.assign(optionsFromArguments(Gate.getDefaults(), arguments, [\"threshold\", \"smoothing\"])));\n    this.name = \"Gate\";\n    const options = optionsFromArguments(Gate.getDefaults(), arguments, [\"threshold\", \"smoothing\"]);\n    this._follower = new Follower({\n      context: this.context,\n      smoothing: options.smoothing\n    });\n    this._gt = new GreaterThan({\n      context: this.context,\n      value: dbToGain(options.threshold)\n    });\n    this.input = new Gain({\n      context: this.context\n    });\n    this._gate = this.output = new Gain({\n      context: this.context\n    });\n    // connections\n    this.input.connect(this._gate);\n    // the control signal\n    this.input.chain(this._follower, this._gt, this._gate.gain);\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      smoothing: 0.1,\n      threshold: -40\n    });\n  }\n  /**\n   * The threshold of the gate in decibels\n   */\n  get threshold() {\n    return gainToDb(this._gt.value);\n  }\n  set threshold(thresh) {\n    this._gt.value = dbToGain(thresh);\n  }\n  /**\n   * The attack/decay speed of the gate. See [[Follower.smoothing]]\n   */\n  get smoothing() {\n    return this._follower.smoothing;\n  }\n  set smoothing(smoothingTime) {\n    this._follower.smoothing = smoothingTime;\n  }\n  dispose() {\n    super.dispose();\n    this.input.dispose();\n    this._follower.dispose();\n    this._gt.dispose();\n    this._gate.dispose();\n    return this;\n  }\n}","map":{"version":3,"names":["ToneAudioNode","GreaterThan","Gain","Follower","optionsFromArguments","dbToGain","gainToDb","Gate","constructor","Object","assign","getDefaults","arguments","name","options","_follower","context","smoothing","_gt","value","threshold","input","_gate","output","connect","chain","gain","thresh","smoothingTime","dispose"],"sources":["../../../../Tone/component/dynamics/Gate.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,aAAa,QAA8B,kCAAkC;AAEtF,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,IAAI,QAAQ,yBAAyB;AAC9C,SAASC,QAAQ,QAAQ,sBAAsB;AAC/C,SAASC,oBAAoB,QAAQ,0BAA0B;AAC/D,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,6BAA6B;AAOhE;;;;;;;;;;;;AAYA,OAAM,MAAOC,IAAK,SAAQP,aAA0B;EA4BnDQ,YAAA;IACC,KAAK,CAACC,MAAM,CAACC,MAAM,CAACN,oBAAoB,CAACG,IAAI,CAACI,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;IA3B7F,KAAAC,IAAI,GAAW,MAAM;IA4B7B,MAAMC,OAAO,GAAGV,oBAAoB,CAACG,IAAI,CAACI,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;IAE/F,IAAI,CAACG,SAAS,GAAG,IAAIZ,QAAQ,CAAC;MAC7Ba,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,SAAS,EAAEH,OAAO,CAACG;KACnB,CAAC;IACF,IAAI,CAACC,GAAG,GAAG,IAAIjB,WAAW,CAAC;MAC1Be,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBG,KAAK,EAAEd,QAAQ,CAACS,OAAO,CAACM,SAAS;KACjC,CAAC;IACF,IAAI,CAACC,KAAK,GAAG,IAAInB,IAAI,CAAC;MAAEc,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;IAChD,IAAI,CAACM,KAAK,GAAG,IAAI,CAACC,MAAM,GAAG,IAAIrB,IAAI,CAAC;MAAEc,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;IAE9D;IACA,IAAI,CAACK,KAAK,CAACG,OAAO,CAAC,IAAI,CAACF,KAAK,CAAC;IAC9B;IACA,IAAI,CAACD,KAAK,CAACI,KAAK,CAAC,IAAI,CAACV,SAAS,EAAE,IAAI,CAACG,GAAG,EAAE,IAAI,CAACI,KAAK,CAACI,IAAI,CAAC;EAC5D;EAEA,OAAOf,WAAWA,CAAA;IACjB,OAAOF,MAAM,CAACC,MAAM,CAACV,aAAa,CAACW,WAAW,EAAE,EAAE;MACjDM,SAAS,EAAE,GAAG;MACdG,SAAS,EAAE,CAAC;KACZ,CAAC;EACH;EAEA;;;EAGA,IAAIA,SAASA,CAAA;IACZ,OAAOd,QAAQ,CAAC,IAAI,CAACY,GAAG,CAACC,KAAK,CAAC;EAChC;EACA,IAAIC,SAASA,CAACO,MAAM;IACnB,IAAI,CAACT,GAAG,CAACC,KAAK,GAAGd,QAAQ,CAACsB,MAAM,CAAC;EAClC;EAEA;;;EAGA,IAAIV,SAASA,CAAA;IACZ,OAAO,IAAI,CAACF,SAAS,CAACE,SAAS;EAChC;EACA,IAAIA,SAASA,CAACW,aAAa;IAC1B,IAAI,CAACb,SAAS,CAACE,SAAS,GAAGW,aAAa;EACzC;EAEAC,OAAOA,CAAA;IACN,KAAK,CAACA,OAAO,EAAE;IACf,IAAI,CAACR,KAAK,CAACQ,OAAO,EAAE;IACpB,IAAI,CAACd,SAAS,CAACc,OAAO,EAAE;IACxB,IAAI,CAACX,GAAG,CAACW,OAAO,EAAE;IAClB,IAAI,CAACP,KAAK,CAACO,OAAO,EAAE;IACpB,OAAO,IAAI;EACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}