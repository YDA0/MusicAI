{"ast":null,"code":"import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Compressor } from \"./Compressor\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { MultibandSplit } from \"../channel/MultibandSplit\";\nimport { Gain } from \"../../core/context/Gain\";\n/**\n * A compressor with separate controls over low/mid/high dynamics. See [[Compressor]] and [[MultibandSplit]]\n *\n * @example\n * const multiband = new Tone.MultibandCompressor({\n * \tlowFrequency: 200,\n * \thighFrequency: 1300,\n * \tlow: {\n * \t\tthreshold: -12\n * \t}\n * });\n * @category Component\n */\nexport class MultibandCompressor extends ToneAudioNode {\n  constructor() {\n    super(Object.assign(optionsFromArguments(MultibandCompressor.getDefaults(), arguments)));\n    this.name = \"MultibandCompressor\";\n    const options = optionsFromArguments(MultibandCompressor.getDefaults(), arguments);\n    this._splitter = this.input = new MultibandSplit({\n      context: this.context,\n      lowFrequency: options.lowFrequency,\n      highFrequency: options.highFrequency\n    });\n    this.lowFrequency = this._splitter.lowFrequency;\n    this.highFrequency = this._splitter.highFrequency;\n    this.output = new Gain({\n      context: this.context\n    });\n    this.low = new Compressor(Object.assign(options.low, {\n      context: this.context\n    }));\n    this.mid = new Compressor(Object.assign(options.mid, {\n      context: this.context\n    }));\n    this.high = new Compressor(Object.assign(options.high, {\n      context: this.context\n    }));\n    // connect the compressor\n    this._splitter.low.chain(this.low, this.output);\n    this._splitter.mid.chain(this.mid, this.output);\n    this._splitter.high.chain(this.high, this.output);\n    readOnly(this, [\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      lowFrequency: 250,\n      highFrequency: 2000,\n      low: {\n        ratio: 6,\n        threshold: -30,\n        release: 0.25,\n        attack: 0.03,\n        knee: 10\n      },\n      mid: {\n        ratio: 3,\n        threshold: -24,\n        release: 0.03,\n        attack: 0.02,\n        knee: 16\n      },\n      high: {\n        ratio: 3,\n        threshold: -24,\n        release: 0.03,\n        attack: 0.02,\n        knee: 16\n      }\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._splitter.dispose();\n    this.low.dispose();\n    this.mid.dispose();\n    this.high.dispose();\n    this.output.dispose();\n    return this;\n  }\n}","map":{"version":3,"names":["ToneAudioNode","Compressor","optionsFromArguments","readOnly","MultibandSplit","Gain","MultibandCompressor","constructor","Object","assign","getDefaults","arguments","name","options","_splitter","input","context","lowFrequency","highFrequency","output","low","mid","high","chain","ratio","threshold","release","attack","knee","dispose"],"sources":["../../../../Tone/component/dynamics/MultibandCompressor.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}