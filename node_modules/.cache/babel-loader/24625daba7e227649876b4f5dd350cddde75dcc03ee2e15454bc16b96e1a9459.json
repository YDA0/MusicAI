{"ast":null,"code":"import { Gain } from \"../../core/context/Gain\";\nimport { Param } from \"../../core/context/Param\";\nimport { connectSeries, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { ToneAudioWorklet } from \"../../core/worklet/ToneAudioWorklet\";\nimport { workletName } from \"./FeedbackCombFilter.worklet\";\n/**\n * Comb filters are basic building blocks for physical modeling. Read more\n * about comb filters on [CCRMA's website](https://ccrma.stanford.edu/~jos/pasp/Feedback_Comb_Filters.html).\n *\n * This comb filter is implemented with the AudioWorkletNode which allows it to have feedback delays less than the\n * Web Audio processing block of 128 samples. There is a polyfill for browsers that don't yet support the\n * AudioWorkletNode, but it will add some latency and have slower performance than the AudioWorkletNode.\n * @category Component\n */\nexport class FeedbackCombFilter extends ToneAudioWorklet {\n  constructor() {\n    super(optionsFromArguments(FeedbackCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\"]));\n    this.name = \"FeedbackCombFilter\";\n    const options = optionsFromArguments(FeedbackCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\"]);\n    this.input = new Gain({\n      context: this.context\n    });\n    this.output = new Gain({\n      context: this.context\n    });\n    this.delayTime = new Param({\n      context: this.context,\n      value: options.delayTime,\n      units: \"time\",\n      minValue: 0,\n      maxValue: 1,\n      param: this._dummyParam,\n      swappable: true\n    });\n    this.resonance = new Param({\n      context: this.context,\n      value: options.resonance,\n      units: \"normalRange\",\n      param: this._dummyParam,\n      swappable: true\n    });\n    readOnly(this, [\"resonance\", \"delayTime\"]);\n  }\n  _audioWorkletName() {\n    return workletName;\n  }\n  /**\n   * The default parameters\n   */\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      delayTime: 0.1,\n      resonance: 0.5\n    });\n  }\n  onReady(node) {\n    connectSeries(this.input, node, this.output);\n    const delayTime = node.parameters.get(\"delayTime\");\n    ;\n    this.delayTime.setParam(delayTime);\n    const feedback = node.parameters.get(\"feedback\");\n    ;\n    this.resonance.setParam(feedback);\n  }\n  dispose() {\n    super.dispose();\n    this.input.dispose();\n    this.output.dispose();\n    this.delayTime.dispose();\n    this.resonance.dispose();\n    return this;\n  }\n}","map":{"version":3,"names":["Gain","Param","connectSeries","ToneAudioNode","optionsFromArguments","readOnly","ToneAudioWorklet","workletName","FeedbackCombFilter","constructor","getDefaults","arguments","name","options","input","context","output","delayTime","value","units","minValue","maxValue","param","_dummyParam","swappable","resonance","_audioWorkletName","Object","assign","onReady","node","parameters","get","setParam","feedback","dispose"],"sources":["../../../../Tone/component/filter/FeedbackCombFilter.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,IAAI,QAAQ,yBAAyB;AAC9C,SAASC,KAAK,QAAQ,0BAA0B;AAChD,SAASC,aAAa,EAAEC,aAAa,QAA8B,kCAAkC;AAErG,SAASC,oBAAoB,QAAQ,0BAA0B;AAC/D,SAASC,QAAQ,QAA0B,2BAA2B;AACtE,SAASC,gBAAgB,QAAQ,qCAAqC;AACtE,SAASC,WAAW,QAAQ,8BAA8B;AAO1D;;;;;;;;;AASA,OAAM,MAAOC,kBAAmB,SAAQF,gBAA2C;EAuBlFG,YAAA;IACC,KAAK,CAACL,oBAAoB,CAACI,kBAAkB,CAACE,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC;IAtB5F,KAAAC,IAAI,GAAG,oBAAoB;IAuBnC,MAAMC,OAAO,GAAGT,oBAAoB,CAACI,kBAAkB,CAACE,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;IAE7G,IAAI,CAACG,KAAK,GAAG,IAAId,IAAI,CAAC;MAAEe,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;IAChD,IAAI,CAACC,MAAM,GAAG,IAAIhB,IAAI,CAAC;MAAEe,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;IAEjD,IAAI,CAACE,SAAS,GAAG,IAAIhB,KAAK,CAAS;MAClCc,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBG,KAAK,EAAEL,OAAO,CAACI,SAAS;MACxBE,KAAK,EAAE,MAAM;MACbC,QAAQ,EAAE,CAAC;MACXC,QAAQ,EAAE,CAAC;MACXC,KAAK,EAAE,IAAI,CAACC,WAAW;MACvBC,SAAS,EAAE;KACX,CAAC;IAEF,IAAI,CAACC,SAAS,GAAG,IAAIxB,KAAK,CAAgB;MACzCc,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBG,KAAK,EAAEL,OAAO,CAACY,SAAS;MACxBN,KAAK,EAAE,aAAa;MACpBG,KAAK,EAAE,IAAI,CAACC,WAAW;MACvBC,SAAS,EAAE;KACX,CAAC;IAEFnB,QAAQ,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;EAC3C;EAEUqB,iBAAiBA,CAAA;IAC1B,OAAOnB,WAAW;EACnB;EAEA;;;EAGA,OAAOG,WAAWA,CAAA;IACjB,OAAOiB,MAAM,CAACC,MAAM,CAACzB,aAAa,CAACO,WAAW,EAAE,EAAE;MACjDO,SAAS,EAAE,GAAG;MACdQ,SAAS,EAAE;KACX,CAAC;EACH;EAEAI,OAAOA,CAACC,IAAsB;IAC7B5B,aAAa,CAAC,IAAI,CAACY,KAAK,EAAEgB,IAAI,EAAE,IAAI,CAACd,MAAM,CAAC;IAC5C,MAAMC,SAAS,GAAGa,IAAI,CAACC,UAAU,CAACC,GAAG,CAAC,WAAW,CAAe;IAAC;IACjE,IAAI,CAACf,SAAS,CAACgB,QAAQ,CAAChB,SAAS,CAAC;IAClC,MAAMiB,QAAQ,GAAGJ,IAAI,CAACC,UAAU,CAACC,GAAG,CAAC,UAAU,CAAe;IAAC;IAC/D,IAAI,CAACP,SAAS,CAACQ,QAAQ,CAACC,QAAQ,CAAC;EAClC;EAEAC,OAAOA,CAAA;IACN,KAAK,CAACA,OAAO,EAAE;IACf,IAAI,CAACrB,KAAK,CAACqB,OAAO,EAAE;IACpB,IAAI,CAACnB,MAAM,CAACmB,OAAO,EAAE;IACrB,IAAI,CAAClB,SAAS,CAACkB,OAAO,EAAE;IACxB,IAAI,CAACV,SAAS,CAACU,OAAO,EAAE;IACxB,OAAO,IAAI;EACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}