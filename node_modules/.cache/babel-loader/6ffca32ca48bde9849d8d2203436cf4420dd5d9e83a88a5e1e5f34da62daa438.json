{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Tone } from \"../Tone\";\nimport { isUndef } from \"./TypeCheck\";\n/**\n * Emitter gives classes which extend it\n * the ability to listen for and emit events.\n * Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n * MIT (c) 2011 Jerome Etienne.\n * @category Core\n */\nexport class Emitter extends Tone {\n  constructor() {\n    super(...arguments);\n    this.name = \"Emitter\";\n  }\n  /**\n   * Bind a callback to a specific event.\n   * @param  event     The name of the event to listen for.\n   * @param  callback  The callback to invoke when the event is emitted\n   */\n  on(event, callback) {\n    // split the event\n    const events = event.split(/\\W+/);\n    events.forEach(eventName => {\n      if (isUndef(this._events)) {\n        this._events = {};\n      }\n      if (!this._events.hasOwnProperty(eventName)) {\n        this._events[eventName] = [];\n      }\n      this._events[eventName].push(callback);\n    });\n    return this;\n  }\n  /**\n   * Bind a callback which is only invoked once\n   * @param  event     The name of the event to listen for.\n   * @param  callback  The callback to invoke when the event is emitted\n   */\n  once(event, callback) {\n    const boundCallback = (...args) => {\n      // invoke the callback\n      callback(...args);\n      // remove the event\n      this.off(event, boundCallback);\n    };\n    this.on(event, boundCallback);\n    return this;\n  }\n  /**\n   * Remove the event listener.\n   * @param  event     The event to stop listening to.\n   * @param  callback  The callback which was bound to the event with Emitter.on.\n   *                   If no callback is given, all callbacks events are removed.\n   */\n  off(event, callback) {\n    const events = event.split(/\\W+/);\n    events.forEach(eventName => {\n      if (isUndef(this._events)) {\n        this._events = {};\n      }\n      if (this._events.hasOwnProperty(event)) {\n        if (isUndef(callback)) {\n          this._events[event] = [];\n        } else {\n          const eventList = this._events[event];\n          for (let i = eventList.length - 1; i >= 0; i--) {\n            if (eventList[i] === callback) {\n              eventList.splice(i, 1);\n            }\n          }\n        }\n      }\n    });\n    return this;\n  }\n  /**\n   * Invoke all of the callbacks bound to the event\n   * with any arguments passed in.\n   * @param  event  The name of the event.\n   * @param args The arguments to pass to the functions listening.\n   */\n  emit(event, ...args) {\n    if (this._events) {\n      if (this._events.hasOwnProperty(event)) {\n        const eventList = this._events[event].slice(0);\n        for (let i = 0, len = eventList.length; i < len; i++) {\n          eventList[i].apply(this, args);\n        }\n      }\n    }\n    return this;\n  }\n  /**\n   * Add Emitter functions (on/off/emit) to the object\n   */\n  static mixin(constr) {\n    // instance._events = {};\n    [\"on\", \"once\", \"off\", \"emit\"].forEach(name => {\n      const property = Object.getOwnPropertyDescriptor(Emitter.prototype, name);\n      Object.defineProperty(constr.prototype, name, property);\n    });\n  }\n  /**\n   * Clean up\n   */\n  dispose() {\n    super.dispose();\n    this._events = undefined;\n    return this;\n  }\n}","map":{"version":3,"names":["Tone","isUndef","Emitter","constructor","name","on","event","callback","events","split","forEach","eventName","_events","hasOwnProperty","push","once","boundCallback","args","off","eventList","i","length","splice","emit","slice","len","apply","mixin","constr","property","Object","getOwnPropertyDescriptor","prototype","defineProperty","dispose","undefined"],"sources":["../../../../Tone/core/util/Emitter.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}