{"ast":null,"code":"import { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Solo lets you isolate a specific audio stream. When an instance is set to `solo=true`,\n * it will mute all other instances of Solo.\n * @example\n * const soloA = new Tone.Solo().toDestination();\n * const oscA = new Tone.Oscillator(\"C4\", \"sawtooth\").connect(soloA);\n * const soloB = new Tone.Solo().toDestination();\n * const oscB = new Tone.Oscillator(\"E4\", \"square\").connect(soloB);\n * soloA.solo = true;\n * // no audio will pass through soloB\n * @category Component\n */\nexport class Solo extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"]));\n    this.name = \"Solo\";\n    const options = optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"]);\n    this.input = this.output = new Gain({\n      context: this.context\n    });\n    if (!Solo._allSolos.has(this.context)) {\n      Solo._allSolos.set(this.context, new Set());\n    }\n    Solo._allSolos.get(this.context).add(this);\n    // set initially\n    this.solo = options.solo;\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      solo: false\n    });\n  }\n  /**\n   * Isolates this instance and mutes all other instances of Solo.\n   * Only one instance can be soloed at a time. A soloed\n   * instance will report `solo=false` when another instance is soloed.\n   */\n  get solo() {\n    return this._isSoloed();\n  }\n  set solo(solo) {\n    if (solo) {\n      this._addSolo();\n    } else {\n      this._removeSolo();\n    }\n    Solo._allSolos.get(this.context).forEach(instance => instance._updateSolo());\n  }\n  /**\n   * If the current instance is muted, i.e. another instance is soloed\n   */\n  get muted() {\n    return this.input.gain.value === 0;\n  }\n  /**\n   * Add this to the soloed array\n   */\n  _addSolo() {\n    if (!Solo._soloed.has(this.context)) {\n      Solo._soloed.set(this.context, new Set());\n    }\n    Solo._soloed.get(this.context).add(this);\n  }\n  /**\n   * Remove this from the soloed array\n   */\n  _removeSolo() {\n    if (Solo._soloed.has(this.context)) {\n      Solo._soloed.get(this.context).delete(this);\n    }\n  }\n  /**\n   * Is this on the soloed array\n   */\n  _isSoloed() {\n    return Solo._soloed.has(this.context) && Solo._soloed.get(this.context).has(this);\n  }\n  /**\n   * Returns true if no one is soloed\n   */\n  _noSolos() {\n    // either does not have any soloed added\n    return !Solo._soloed.has(this.context) ||\n    // or has a solo set but doesn't include any items\n    Solo._soloed.has(this.context) && Solo._soloed.get(this.context).size === 0;\n  }\n  /**\n   * Solo the current instance and unsolo all other instances.\n   */\n  _updateSolo() {\n    if (this._isSoloed()) {\n      this.input.gain.value = 1;\n    } else if (this._noSolos()) {\n      // no one is soloed\n      this.input.gain.value = 1;\n    } else {\n      this.input.gain.value = 0;\n    }\n  }\n  dispose() {\n    super.dispose();\n    Solo._allSolos.get(this.context).delete(this);\n    this._removeSolo();\n    return this;\n  }\n}\n/**\n * Hold all of the solo'ed tracks belonging to a specific context\n */\nSolo._allSolos = new Map();\n/**\n * Hold the currently solo'ed instance(s)\n */\nSolo._soloed = new Map();","map":{"version":3,"names":["Gain","ToneAudioNode","optionsFromArguments","Solo","constructor","getDefaults","arguments","name","options","input","output","context","_allSolos","has","set","Set","get","add","solo","Object","assign","_isSoloed","_addSolo","_removeSolo","forEach","instance","_updateSolo","muted","gain","value","_soloed","delete","_noSolos","size","dispose","Map"],"sources":["../../../../Tone/component/channel/Solo.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}