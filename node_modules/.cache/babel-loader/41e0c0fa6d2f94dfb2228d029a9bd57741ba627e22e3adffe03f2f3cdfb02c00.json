{"ast":null,"code":"import { Gain } from \"../core/context/Gain\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { noOp } from \"../core/util/Interface\";\nimport { assert } from \"../core/util/Debug\";\n/**\n * Base class for fire-and-forget nodes\n */\nexport class OneShotSource extends ToneAudioNode {\n  constructor(options) {\n    super(options);\n    /**\n     * The callback to invoke after the\n     * source is done playing.\n     */\n    this.onended = noOp;\n    /**\n     * The start time\n     */\n    this._startTime = -1;\n    /**\n     * The stop time\n     */\n    this._stopTime = -1;\n    /**\n     * The id of the timeout\n     */\n    this._timeout = -1;\n    /**\n     * The public output node\n     */\n    this.output = new Gain({\n      context: this.context,\n      gain: 0\n    });\n    /**\n     * The output gain node.\n     */\n    this._gainNode = this.output;\n    /**\n     * Get the playback state at the given time\n     */\n    this.getStateAtTime = function (time) {\n      const computedTime = this.toSeconds(time);\n      if (this._startTime !== -1 && computedTime >= this._startTime && (this._stopTime === -1 || computedTime <= this._stopTime)) {\n        return \"started\";\n      } else {\n        return \"stopped\";\n      }\n    };\n    this._fadeIn = options.fadeIn;\n    this._fadeOut = options.fadeOut;\n    this._curve = options.curve;\n    this.onended = options.onended;\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      curve: \"linear\",\n      fadeIn: 0,\n      fadeOut: 0,\n      onended: noOp\n    });\n  }\n  /**\n   * Start the source at the given time\n   * @param  time When to start the source\n   */\n  _startGain(time, gain = 1) {\n    assert(this._startTime === -1, \"Source cannot be started more than once\");\n    // apply a fade in envelope\n    const fadeInTime = this.toSeconds(this._fadeIn);\n    // record the start time\n    this._startTime = time + fadeInTime;\n    this._startTime = Math.max(this._startTime, this.context.currentTime);\n    // schedule the envelope\n    if (fadeInTime > 0) {\n      this._gainNode.gain.setValueAtTime(0, time);\n      if (this._curve === \"linear\") {\n        this._gainNode.gain.linearRampToValueAtTime(gain, time + fadeInTime);\n      } else {\n        this._gainNode.gain.exponentialApproachValueAtTime(gain, time, fadeInTime);\n      }\n    } else {\n      this._gainNode.gain.setValueAtTime(gain, time);\n    }\n    return this;\n  }\n  /**\n   * Stop the source node at the given time.\n   * @param time When to stop the source\n   */\n  stop(time) {\n    this.log(\"stop\", time);\n    this._stopGain(this.toSeconds(time));\n    return this;\n  }\n  /**\n   * Stop the source at the given time\n   * @param  time When to stop the source\n   */\n  _stopGain(time) {\n    assert(this._startTime !== -1, \"'start' must be called before 'stop'\");\n    // cancel the previous stop\n    this.cancelStop();\n    // the fadeOut time\n    const fadeOutTime = this.toSeconds(this._fadeOut);\n    // schedule the stop callback\n    this._stopTime = this.toSeconds(time) + fadeOutTime;\n    this._stopTime = Math.max(this._stopTime, this.context.currentTime);\n    if (fadeOutTime > 0) {\n      // start the fade out curve at the given time\n      if (this._curve === \"linear\") {\n        this._gainNode.gain.linearRampTo(0, fadeOutTime, time);\n      } else {\n        this._gainNode.gain.targetRampTo(0, fadeOutTime, time);\n      }\n    } else {\n      // stop any ongoing ramps, and set the value to 0\n      this._gainNode.gain.cancelAndHoldAtTime(time);\n      this._gainNode.gain.setValueAtTime(0, time);\n    }\n    this.context.clearTimeout(this._timeout);\n    this._timeout = this.context.setTimeout(() => {\n      // allow additional time for the exponential curve to fully decay\n      const additionalTail = this._curve === \"exponential\" ? fadeOutTime * 2 : 0;\n      this._stopSource(this.now() + additionalTail);\n      this._onended();\n    }, this._stopTime - this.context.currentTime);\n    return this;\n  }\n  /**\n   * Invoke the onended callback\n   */\n  _onended() {\n    if (this.onended !== noOp) {\n      this.onended(this);\n      // overwrite onended to make sure it only is called once\n      this.onended = noOp;\n      // dispose when it's ended to free up for garbage collection only in the online context\n      if (!this.context.isOffline) {\n        const disposeCallback = () => this.dispose();\n        // @ts-ignore\n        if (typeof window.requestIdleCallback !== \"undefined\") {\n          // @ts-ignore\n          window.requestIdleCallback(disposeCallback);\n        } else {\n          setTimeout(disposeCallback, 1000);\n        }\n      }\n    }\n  }\n  /**\n   * Get the playback state at the current time\n   */\n  get state() {\n    return this.getStateAtTime(this.now());\n  }\n  /**\n   * Cancel a scheduled stop event\n   */\n  cancelStop() {\n    this.log(\"cancelStop\");\n    assert(this._startTime !== -1, \"Source is not started\");\n    // cancel the stop envelope\n    this._gainNode.gain.cancelScheduledValues(this._startTime + this.sampleTime);\n    this.context.clearTimeout(this._timeout);\n    this._stopTime = -1;\n    return this;\n  }\n  dispose() {\n    super.dispose();\n    this._gainNode.disconnect();\n    return this;\n  }\n}","map":{"version":3,"names":["Gain","ToneAudioNode","noOp","assert","OneShotSource","constructor","options","onended","_startTime","_stopTime","_timeout","output","context","gain","_gainNode","getStateAtTime","time","computedTime","toSeconds","_fadeIn","fadeIn","_fadeOut","fadeOut","_curve","curve","getDefaults","Object","assign","_startGain","fadeInTime","Math","max","currentTime","setValueAtTime","linearRampToValueAtTime","exponentialApproachValueAtTime","stop","log","_stopGain","cancelStop","fadeOutTime","linearRampTo","targetRampTo","cancelAndHoldAtTime","clearTimeout","setTimeout","additionalTail","_stopSource","now","_onended","isOffline","disposeCallback","dispose","window","requestIdleCallback","state","cancelScheduledValues","sampleTime","disconnect"],"sources":["../../../Tone/source/OneShotSource.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}