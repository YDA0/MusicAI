{"ast":null,"code":"import \"core-js/modules/esnext.typed-array.to-reversed.js\";\nimport \"core-js/modules/esnext.typed-array.to-sorted.js\";\nimport \"core-js/modules/esnext.typed-array.with.js\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Param } from \"../../core/context/Param\";\nimport { assert } from \"../../core/util/Debug\";\n/**\n * Thin wrapper around the native Web Audio [BiquadFilterNode](https://webaudio.github.io/web-audio-api/#biquadfilternode).\n * BiquadFilter is similar to [[Filter]] but doesn't have the option to set the \"rolloff\" value.\n * @category Component\n */\nexport class BiquadFilter extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(BiquadFilter.getDefaults(), arguments, [\"frequency\", \"type\"]));\n    this.name = \"BiquadFilter\";\n    const options = optionsFromArguments(BiquadFilter.getDefaults(), arguments, [\"frequency\", \"type\"]);\n    this._filter = this.context.createBiquadFilter();\n    this.input = this.output = this._filter;\n    this.Q = new Param({\n      context: this.context,\n      units: \"number\",\n      value: options.Q,\n      param: this._filter.Q\n    });\n    this.frequency = new Param({\n      context: this.context,\n      units: \"frequency\",\n      value: options.frequency,\n      param: this._filter.frequency\n    });\n    this.detune = new Param({\n      context: this.context,\n      units: \"cents\",\n      value: options.detune,\n      param: this._filter.detune\n    });\n    this.gain = new Param({\n      context: this.context,\n      units: \"decibels\",\n      convert: false,\n      value: options.gain,\n      param: this._filter.gain\n    });\n    this.type = options.type;\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      Q: 1,\n      type: \"lowpass\",\n      frequency: 350,\n      detune: 0,\n      gain: 0\n    });\n  }\n  /**\n   * The type of this BiquadFilterNode. For a complete list of types and their attributes, see the\n   * [Web Audio API](https://webaudio.github.io/web-audio-api/#dom-biquadfiltertype-lowpass)\n   */\n  get type() {\n    return this._filter.type;\n  }\n  set type(type) {\n    const types = [\"lowpass\", \"highpass\", \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", \"peaking\"];\n    assert(types.indexOf(type) !== -1, `Invalid filter type: ${type}`);\n    this._filter.type = type;\n  }\n  /**\n   * Get the frequency response curve. This curve represents how the filter\n   * responses to frequencies between 20hz-20khz.\n   * @param  len The number of values to return\n   * @return The frequency response curve between 20-20kHz\n   */\n  getFrequencyResponse(len = 128) {\n    // start with all 1s\n    const freqValues = new Float32Array(len);\n    for (let i = 0; i < len; i++) {\n      const norm = Math.pow(i / len, 2);\n      const freq = norm * (20000 - 20) + 20;\n      freqValues[i] = freq;\n    }\n    const magValues = new Float32Array(len);\n    const phaseValues = new Float32Array(len);\n    // clone the filter to remove any connections which may be changing the value\n    const filterClone = this.context.createBiquadFilter();\n    filterClone.type = this.type;\n    filterClone.Q.value = this.Q.value;\n    filterClone.frequency.value = this.frequency.value;\n    filterClone.gain.value = this.gain.value;\n    filterClone.getFrequencyResponse(freqValues, magValues, phaseValues);\n    return magValues;\n  }\n  dispose() {\n    super.dispose();\n    this._filter.disconnect();\n    this.Q.dispose();\n    this.frequency.dispose();\n    this.gain.dispose();\n    this.detune.dispose();\n    return this;\n  }\n}","map":{"version":3,"names":["ToneAudioNode","optionsFromArguments","Param","assert","BiquadFilter","constructor","getDefaults","arguments","name","options","_filter","context","createBiquadFilter","input","output","Q","units","value","param","frequency","detune","gain","convert","type","Object","assign","types","indexOf","getFrequencyResponse","len","freqValues","Float32Array","i","norm","Math","pow","freq","magValues","phaseValues","filterClone","dispose","disconnect"],"sources":["../../../../Tone/component/filter/BiquadFilter.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}