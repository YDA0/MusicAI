{"ast":null,"code":"import { Effect } from \"./Effect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO\n * modulates the delayTime of the delay, causing the pitch to rise and fall.\n * @category Effect\n */\nexport class Vibrato extends Effect {\n  constructor() {\n    super(optionsFromArguments(Vibrato.getDefaults(), arguments, [\"frequency\", \"depth\"]));\n    this.name = \"Vibrato\";\n    const options = optionsFromArguments(Vibrato.getDefaults(), arguments, [\"frequency\", \"depth\"]);\n    this._delayNode = new Delay({\n      context: this.context,\n      delayTime: 0,\n      maxDelay: options.maxDelay\n    });\n    this._lfo = new LFO({\n      context: this.context,\n      type: options.type,\n      min: 0,\n      max: options.maxDelay,\n      frequency: options.frequency,\n      phase: -90 // offse the phase so the resting position is in the center\n    }).start().connect(this._delayNode.delayTime);\n    this.frequency = this._lfo.frequency;\n    this.depth = this._lfo.amplitude;\n    this.depth.value = options.depth;\n    readOnly(this, [\"frequency\", \"depth\"]);\n    this.effectSend.chain(this._delayNode, this.effectReturn);\n  }\n  static getDefaults() {\n    return Object.assign(Effect.getDefaults(), {\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: \"sine\"\n    });\n  }\n  /**\n   * Type of oscillator attached to the Vibrato.\n   */\n  get type() {\n    return this._lfo.type;\n  }\n  set type(type) {\n    this._lfo.type = type;\n  }\n  dispose() {\n    super.dispose();\n    this._delayNode.dispose();\n    this._lfo.dispose();\n    this.frequency.dispose();\n    this.depth.dispose();\n    return this;\n  }\n}","map":{"version":3,"names":["Effect","optionsFromArguments","LFO","Delay","readOnly","Vibrato","constructor","getDefaults","arguments","name","options","_delayNode","context","delayTime","maxDelay","_lfo","type","min","max","frequency","phase","start","connect","depth","amplitude","value","effectSend","chain","effectReturn","Object","assign","dispose"],"sources":["../../../Tone/effect/Vibrato.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,MAAM,QAAuB,UAAU;AAGhD,SAASC,oBAAoB,QAAQ,uBAAuB;AAC5D,SAASC,GAAG,QAAQ,0BAA0B;AAC9C,SAASC,KAAK,QAAQ,uBAAuB;AAG7C,SAASC,QAAQ,QAAQ,wBAAwB;AAQjD;;;;;AAKA,OAAM,MAAOC,OAAQ,SAAQL,MAAsB;EA6BlDM,YAAA;IAEC,KAAK,CAACL,oBAAoB,CAACI,OAAO,CAACE,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC,CAAC;IA7B7E,KAAAC,IAAI,GAAW,SAAS;IA8BhC,MAAMC,OAAO,GAAGT,oBAAoB,CAACI,OAAO,CAACE,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;IAE9F,IAAI,CAACG,UAAU,GAAG,IAAIR,KAAK,CAAC;MAC3BS,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,SAAS,EAAE,CAAC;MACZC,QAAQ,EAAEJ,OAAO,CAACI;KAClB,CAAC;IACF,IAAI,CAACC,IAAI,GAAG,IAAIb,GAAG,CAAC;MACnBU,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBI,IAAI,EAAEN,OAAO,CAACM,IAAI;MAClBC,GAAG,EAAE,CAAC;MACNC,GAAG,EAAER,OAAO,CAACI,QAAQ;MACrBK,SAAS,EAAET,OAAO,CAACS,SAAS;MAC5BC,KAAK,EAAE,CAAC,EAAE,CAAC;KACX,CAAC,CAACC,KAAK,EAAE,CAACC,OAAO,CAAC,IAAI,CAACX,UAAU,CAACE,SAAS,CAAC;IAC7C,IAAI,CAACM,SAAS,GAAG,IAAI,CAACJ,IAAI,CAACI,SAAS;IACpC,IAAI,CAACI,KAAK,GAAG,IAAI,CAACR,IAAI,CAACS,SAAS;IAEhC,IAAI,CAACD,KAAK,CAACE,KAAK,GAAGf,OAAO,CAACa,KAAK;IAChCnB,QAAQ,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;IACtC,IAAI,CAACsB,UAAU,CAACC,KAAK,CAAC,IAAI,CAAChB,UAAU,EAAE,IAAI,CAACiB,YAAY,CAAC;EAC1D;EAEA,OAAOrB,WAAWA,CAAA;IACjB,OAAOsB,MAAM,CAACC,MAAM,CAAC9B,MAAM,CAACO,WAAW,EAAE,EAAE;MAC1CO,QAAQ,EAAE,KAAK;MACfK,SAAS,EAAE,CAAC;MACZI,KAAK,EAAE,GAAG;MACVP,IAAI,EAAE;KACN,CAAC;EACH;EAEA;;;EAGA,IAAIA,IAAIA,CAAA;IACP,OAAO,IAAI,CAACD,IAAI,CAACC,IAAI;EACtB;EACA,IAAIA,IAAIA,CAACA,IAAI;IACZ,IAAI,CAACD,IAAI,CAACC,IAAI,GAAGA,IAAI;EACtB;EAEAe,OAAOA,CAAA;IACN,KAAK,CAACA,OAAO,EAAE;IACf,IAAI,CAACpB,UAAU,CAACoB,OAAO,EAAE;IACzB,IAAI,CAAChB,IAAI,CAACgB,OAAO,EAAE;IACnB,IAAI,CAACZ,SAAS,CAACY,OAAO,EAAE;IACxB,IAAI,CAACR,KAAK,CAACQ,OAAO,EAAE;IACpB,OAAO,IAAI;EACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}