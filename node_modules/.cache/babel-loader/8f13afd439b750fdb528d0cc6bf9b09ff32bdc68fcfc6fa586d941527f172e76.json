{"ast":null,"code":"import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { FeedbackCombFilter } from \"./FeedbackCombFilter\";\nimport { OnePoleFilter } from \"./OnePoleFilter\";\n/**\n * A lowpass feedback comb filter. It is similar to\n * [[FeedbackCombFilter]], but includes a lowpass filter.\n * @category Component\n */\nexport class LowpassCombFilter extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(LowpassCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\", \"dampening\"]));\n    this.name = \"LowpassCombFilter\";\n    const options = optionsFromArguments(LowpassCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\", \"dampening\"]);\n    this._combFilter = this.output = new FeedbackCombFilter({\n      context: this.context,\n      delayTime: options.delayTime,\n      resonance: options.resonance\n    });\n    this.delayTime = this._combFilter.delayTime;\n    this.resonance = this._combFilter.resonance;\n    this._lowpass = this.input = new OnePoleFilter({\n      context: this.context,\n      frequency: options.dampening,\n      type: \"lowpass\"\n    });\n    // connections\n    this._lowpass.connect(this._combFilter);\n  }\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      dampening: 3000,\n      delayTime: 0.1,\n      resonance: 0.5\n    });\n  }\n  /**\n   * The dampening control of the feedback\n   */\n  get dampening() {\n    return this._lowpass.frequency;\n  }\n  set dampening(fq) {\n    this._lowpass.frequency = fq;\n  }\n  dispose() {\n    super.dispose();\n    this._combFilter.dispose();\n    this._lowpass.dispose();\n    return this;\n  }\n}","map":{"version":3,"names":["ToneAudioNode","optionsFromArguments","FeedbackCombFilter","OnePoleFilter","LowpassCombFilter","constructor","getDefaults","arguments","name","options","_combFilter","output","context","delayTime","resonance","_lowpass","input","frequency","dampening","type","connect","Object","assign","fq","dispose"],"sources":["../../../../Tone/component/filter/LowpassCombFilter.ts"],"sourcesContent":[null],"mappings":"AACA,SAAgCA,aAAa,QAA8B,kCAAkC;AAE7G,SAASC,oBAAoB,QAAQ,0BAA0B;AAE/D,SAASC,kBAAkB,QAAQ,sBAAsB;AACzD,SAASC,aAAa,QAAQ,iBAAiB;AAQ/C;;;;;AAKA,OAAM,MAAOC,iBAAkB,SAAQJ,aAAuC;EAkC7EK,YAAA;IACC,KAAK,CAACJ,oBAAoB,CAACG,iBAAiB,CAACE,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,WAAW,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC;IAjCxG,KAAAC,IAAI,GAAG,mBAAmB;IAkClC,MAAMC,OAAO,GAAGR,oBAAoB,CAACG,iBAAiB,CAACE,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,WAAW,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;IAEzH,IAAI,CAACG,WAAW,GAAG,IAAI,CAACC,MAAM,GAAG,IAAIT,kBAAkB,CAAC;MACvDU,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,SAAS,EAAEJ,OAAO,CAACI,SAAS;MAC5BC,SAAS,EAAEL,OAAO,CAACK;KACnB,CAAC;IACF,IAAI,CAACD,SAAS,GAAG,IAAI,CAACH,WAAW,CAACG,SAAS;IAC3C,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,WAAW,CAACI,SAAS;IAE3C,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACC,KAAK,GAAG,IAAIb,aAAa,CAAC;MAC9CS,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBK,SAAS,EAAER,OAAO,CAACS,SAAS;MAC5BC,IAAI,EAAE;KACN,CAAC;IAEF;IACA,IAAI,CAACJ,QAAQ,CAACK,OAAO,CAAC,IAAI,CAACV,WAAW,CAAC;EACxC;EAEA,OAAOJ,WAAWA,CAAA;IACjB,OAAOe,MAAM,CAACC,MAAM,CAACtB,aAAa,CAACM,WAAW,EAAE,EAAE;MACjDY,SAAS,EAAE,IAAI;MACfL,SAAS,EAAE,GAAG;MACdC,SAAS,EAAE;KACX,CAAC;EACH;EAEA;;;EAGA,IAAII,SAASA,CAAA;IACZ,OAAO,IAAI,CAACH,QAAQ,CAACE,SAAS;EAC/B;EACA,IAAIC,SAASA,CAACK,EAAE;IACf,IAAI,CAACR,QAAQ,CAACE,SAAS,GAAGM,EAAE;EAC7B;EAEAC,OAAOA,CAAA;IACN,KAAK,CAACA,OAAO,EAAE;IACf,IAAI,CAACd,WAAW,CAACc,OAAO,EAAE;IAC1B,IAAI,CAACT,QAAQ,CAACS,OAAO,EAAE;IACvB,OAAO,IAAI;EACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}