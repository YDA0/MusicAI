{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  width: \"50px\"\n}, \"글번호\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"제목\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  width: \"80px\"\n}, \"작성자\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  width: \"50px\"\n}, \"조회수\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  width: \"100px\"\n}, \"작성일\")], -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"text-center\"\n};\nconst _hoisted_3 = {\n  class: \"text-center\"\n};\nconst _hoisted_4 = {\n  class: \"text-center\"\n};\nconst _hoisted_5 = {\n  class: \"text-center\"\n};\nconst _hoisted_6 = {\n  class: \"text-right\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_pagination = _resolveComponent(\"v-pagination\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_createElementVNode(\"table\", null, [_hoisted_1, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.boardList, (board, key) => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: key,\n        onClick: _cache[0] || (_cache[0] = (...args) => $options.moveItem && $options.moveItem(...args))\n      }, [_createElementVNode(\"td\", _hoisted_2, _toDisplayString(board.boardNo), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(board.title), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_3, _toDisplayString(board.writer), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_4, _toDisplayString(board.viewCount), 1 /* TEXT */), _createElementVNode(\"td\", _hoisted_5, _toDisplayString($options.dateFormat(board.writeDate)), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))])]), $data.pagination ? (_openBlock(), _createBlock(_component_v_pagination, {\n      key: 0,\n      modelValue: $data.page,\n      \"onUpdate:modelValue\": [_cache[1] || (_cache[1] = $event => $data.page = $event), $options.getBoardList],\n      length: $data.pagination.totalPage\n    }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"length\"])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_v_btn, {\n      color: \"primary\",\n      class: \"mt-5\",\n      onClick: $options.moveWrite\n    }, {\n      default: _withCtx(() => [_createTextVNode(\"글쓰기\")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","width","class","_createBlock","_component_v_container","_hoisted_1","_createElementBlock","_Fragment","_renderList","$data","boardList","board","key","onClick","_cache","args","$options","moveItem","_hoisted_2","_toDisplayString","boardNo","title","_hoisted_3","writer","_hoisted_4","viewCount","_hoisted_5","dateFormat","writeDate","pagination","_component_v_pagination","page","$event","getBoardList","length","totalPage","_hoisted_6","_createVNode","_component_v_btn","color","moveWrite"],"sources":["/Users/yundayoung/Desktop/workspace/helloworld/src/views/board/list.vue"],"sourcesContent":["<template>\n    <v-container>\n        <table>\n            <tr>\n                <th width=\"50px\">글번호</th>\n                <th>제목</th>\n                <th width=\"80px\">작성자</th>\n                <th width=\"50px\">조회수</th>\n                <th width=\"100px\">작성일</th>\n            </tr>\n\n            <tbody>\n                <tr v-for=\"(board, key) in boardList\" :key=\"key\" @click=\"moveItem\">\n                    <td class=\"text-center\">{{ board.boardNo }}</td>\n                    <td>{{ board.title }}</td>\n                    <td class=\"text-center\">{{ board.writer }}</td>\n                    <td class=\"text-center\">{{ board.viewCount }}</td>\n                    <td class=\"text-center\">{{ dateFormat(board.writeDate) }}</td>\n                </tr>\n            </tbody>\n        </table>\n        <v-pagination v-model=\"page\" @update:model-value=\"getBoardList\" v-if=\"pagination\"\n            :length=\"pagination.totalPage\"></v-pagination>\n\n        <div class=\"text-right\">\n            <v-btn color=\"primary\" class=\"mt-5\" @click=\"moveWrite\">글쓰기</v-btn>\n        </div>\n\n    </v-container>\n</template>\n<script>\nimport moment from \"moment\"\nexport default {\n    data() {\n        return {\n            page: 1,\n            boardList: [],\n            pagination: null\n        }\n    },\n    mounted() {\n        this.getBoardList()\n    },\n    methods: {\n        dateFormat(date) {\n            return moment(date).format(\"YYYY-MM-DD HH:mm\")\n        },\n\n        getBoardList() {\n            this.$axios.get(\"/api/board/list\", {\n                page: this.page\n            })\n                .then(result => {\n                    console.log(result.data)\n                    this.boardList = result.data.list\n                    this.pagination = result.data.pagination\n                })\n        },\n        moveWrite() {\n            this.$router.push(\"/board/write\")\n        },\n        moveItem(board) {\n            this.$router.push(\"/board/item/\" + board.boardNo)\n        }\n    }\n}\n</script>\n\n<style>\ntable {\n    width: 100%;\n    border-collapse: collapse;\n}\n\ntable tr th {\n    border-bottom: 1px solid #999;\n}\n\ntable tr th {\n    border-bottom: 1px solid #ccc;\n    padding: 5px 0;\n}\n\ntable tbody tr:hover {\n    cursor: pointer;\n    background-color: #eee;\n}\n</style>"],"mappings":";gCAGYA,mBAAA,CAMK,a,aALDA,mBAAA,CAAyB;EAArBC,KAAK,EAAC;AAAM,GAAC,KAAG,G,aACpBD,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAyB;EAArBC,KAAK,EAAC;AAAM,GAAC,KAAG,G,aACpBD,mBAAA,CAAyB;EAArBC,KAAK,EAAC;AAAM,GAAC,KAAG,G,aACpBD,mBAAA,CAA0B;EAAtBC,KAAK,EAAC;AAAO,GAAC,KAAG,E;;EAKbC,KAAK,EAAC;AAAa;;EAEnBA,KAAK,EAAC;AAAa;;EACnBA,KAAK,EAAC;AAAa;;EACnBA,KAAK,EAAC;AAAa;;EAO9BA,KAAK,EAAC;AAAY;;;;;uBAvB3BC,YAAA,CA2BcC,sBAAA;sBA1BV,MAkBQ,CAlBRJ,mBAAA,CAkBQ,gBAjBJK,UAMK,EAELL,mBAAA,CAQQ,iB,kBAPJM,mBAAA,CAMKC,SAAA,QAAAC,WAAA,CANsBC,KAAA,CAAAC,SAAS,GAAxBC,KAAK,EAAEC,GAAG;2BAAtBN,mBAAA,CAMK;QANkCM,GAAG,EAAEA,GAAG;QAAGC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;UAC7Df,mBAAA,CAAgD,MAAhDkB,UAAgD,EAAAC,gBAAA,CAArBR,KAAK,CAACS,OAAO,kBACxCpB,mBAAA,CAA0B,YAAAmB,gBAAA,CAAnBR,KAAK,CAACU,KAAK,kBAClBrB,mBAAA,CAA+C,MAA/CsB,UAA+C,EAAAH,gBAAA,CAApBR,KAAK,CAACY,MAAM,kBACvCvB,mBAAA,CAAkD,MAAlDwB,UAAkD,EAAAL,gBAAA,CAAvBR,KAAK,CAACc,SAAS,kBAC1CzB,mBAAA,CAA8D,MAA9D0B,UAA8D,EAAAP,gBAAA,CAAnCH,QAAA,CAAAW,UAAU,CAAChB,KAAK,CAACiB,SAAS,kB;wCAIKnB,KAAA,CAAAoB,UAAU,I,cAAhF1B,YAAA,CACkD2B,uBAAA;;kBAD3BrB,KAAA,CAAAsB,IAAI;kEAAJtB,KAAA,CAAAsB,IAAI,GAAAC,MAAA,GAAuBhB,QAAA,CAAAiB,YAAY,C;MACzDC,MAAM,EAAEzB,KAAA,CAAAoB,UAAU,CAACM;mHAExBnC,mBAAA,CAEM,OAFNoC,UAEM,GADFC,YAAA,CAAkEC,gBAAA;MAA3DC,KAAK,EAAC,SAAS;MAACrC,KAAK,EAAC,MAAM;MAAEW,OAAK,EAAEG,QAAA,CAAAwB;;wBAAW,MAAG,C,iBAAH,KAAG,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}