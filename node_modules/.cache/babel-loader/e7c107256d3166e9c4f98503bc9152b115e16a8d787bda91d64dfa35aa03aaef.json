{"ast":null,"code":"import { TicksClass } from \"../core/type/Ticks\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isString } from \"../core/util/TypeCheck\";\nimport { Part } from \"./Part\";\nimport { ToneEvent } from \"./ToneEvent\";\n/**\n * A sequence is an alternate notation of a part. Instead\n * of passing in an array of [time, event] pairs, pass\n * in an array of events which will be spaced at the\n * given subdivision. Sub-arrays will subdivide that beat\n * by the number of items are in the array.\n * Sequence notation inspiration from [Tidal](http://yaxu.org/tidal/)\n * @example\n * const synth = new Tone.Synth().toDestination();\n * const seq = new Tone.Sequence((time, note) => {\n * \tsynth.triggerAttackRelease(note, 0.1, time);\n * \t// subdivisions are given as subarrays\n * }, [\"C4\", [\"E4\", \"D4\", \"E4\"], \"G4\", [\"A4\", \"G4\"]]).start(0);\n * Tone.Transport.start();\n * @category Event\n */\nexport class Sequence extends ToneEvent {\n  constructor() {\n    super(optionsFromArguments(Sequence.getDefaults(), arguments, [\"callback\", \"events\", \"subdivision\"]));\n    this.name = \"Sequence\";\n    /**\n     * The object responsible for scheduling all of the events\n     */\n    this._part = new Part({\n      callback: this._seqCallback.bind(this),\n      context: this.context\n    });\n    /**\n     * private reference to all of the sequence proxies\n     */\n    this._events = [];\n    /**\n     * The proxied array\n     */\n    this._eventsArray = [];\n    const options = optionsFromArguments(Sequence.getDefaults(), arguments, [\"callback\", \"events\", \"subdivision\"]);\n    this._subdivision = this.toTicks(options.subdivision);\n    this.events = options.events;\n    // set all of the values\n    this.loop = options.loop;\n    this.loopStart = options.loopStart;\n    this.loopEnd = options.loopEnd;\n    this.playbackRate = options.playbackRate;\n    this.probability = options.probability;\n    this.humanize = options.humanize;\n    this.mute = options.mute;\n    this.playbackRate = options.playbackRate;\n  }\n  static getDefaults() {\n    return Object.assign(omitFromObject(ToneEvent.getDefaults(), [\"value\"]), {\n      events: [],\n      loop: true,\n      loopEnd: 0,\n      loopStart: 0,\n      subdivision: \"8n\"\n    });\n  }\n  /**\n   * The internal callback for when an event is invoked\n   */\n  _seqCallback(time, value) {\n    if (value !== null) {\n      this.callback(time, value);\n    }\n  }\n  /**\n   * The sequence\n   */\n  get events() {\n    return this._events;\n  }\n  set events(s) {\n    this.clear();\n    this._eventsArray = s;\n    this._events = this._createSequence(this._eventsArray);\n    this._eventsUpdated();\n  }\n  /**\n   * Start the part at the given time.\n   * @param  time    When to start the part.\n   * @param  offset  The offset index to start at\n   */\n  start(time, offset) {\n    this._part.start(time, offset ? this._indexTime(offset) : offset);\n    return this;\n  }\n  /**\n   * Stop the part at the given time.\n   * @param  time  When to stop the part.\n   */\n  stop(time) {\n    this._part.stop(time);\n    return this;\n  }\n  /**\n   * The subdivision of the sequence. This can only be\n   * set in the constructor. The subdivision is the\n   * interval between successive steps.\n   */\n  get subdivision() {\n    return new TicksClass(this.context, this._subdivision).toSeconds();\n  }\n  /**\n   * Create a sequence proxy which can be monitored to create subsequences\n   */\n  _createSequence(array) {\n    return new Proxy(array, {\n      get: (target, property) => {\n        // property is index in this case\n        return target[property];\n      },\n      set: (target, property, value) => {\n        if (isString(property) && isFinite(parseInt(property, 10))) {\n          if (isArray(value)) {\n            target[property] = this._createSequence(value);\n          } else {\n            target[property] = value;\n          }\n        } else {\n          target[property] = value;\n        }\n        this._eventsUpdated();\n        // return true to accept the changes\n        return true;\n      }\n    });\n  }\n  /**\n   * When the sequence has changed, all of the events need to be recreated\n   */\n  _eventsUpdated() {\n    this._part.clear();\n    this._rescheduleSequence(this._eventsArray, this._subdivision, this.startOffset);\n    // update the loopEnd\n    this.loopEnd = this.loopEnd;\n  }\n  /**\n   * reschedule all of the events that need to be rescheduled\n   */\n  _rescheduleSequence(sequence, subdivision, startOffset) {\n    sequence.forEach((value, index) => {\n      const eventOffset = index * subdivision + startOffset;\n      if (isArray(value)) {\n        this._rescheduleSequence(value, subdivision / value.length, eventOffset);\n      } else {\n        const startTime = new TicksClass(this.context, eventOffset, \"i\").toSeconds();\n        this._part.add(startTime, value);\n      }\n    });\n  }\n  /**\n   * Get the time of the index given the Sequence's subdivision\n   * @param  index\n   * @return The time of that index\n   */\n  _indexTime(index) {\n    return new TicksClass(this.context, index * this._subdivision + this.startOffset).toSeconds();\n  }\n  /**\n   * Clear all of the events\n   */\n  clear() {\n    this._part.clear();\n    return this;\n  }\n  dispose() {\n    super.dispose();\n    this._part.dispose();\n    return this;\n  }\n  //-------------------------------------\n  // PROXY CALLS\n  //-------------------------------------\n  get loop() {\n    return this._part.loop;\n  }\n  set loop(l) {\n    this._part.loop = l;\n  }\n  /**\n   * The index at which the sequence should start looping\n   */\n  get loopStart() {\n    return this._loopStart;\n  }\n  set loopStart(index) {\n    this._loopStart = index;\n    this._part.loopStart = this._indexTime(index);\n  }\n  /**\n   * The index at which the sequence should end looping\n   */\n  get loopEnd() {\n    return this._loopEnd;\n  }\n  set loopEnd(index) {\n    this._loopEnd = index;\n    if (index === 0) {\n      this._part.loopEnd = this._indexTime(this._eventsArray.length);\n    } else {\n      this._part.loopEnd = this._indexTime(index);\n    }\n  }\n  get startOffset() {\n    return this._part.startOffset;\n  }\n  set startOffset(start) {\n    this._part.startOffset = start;\n  }\n  get playbackRate() {\n    return this._part.playbackRate;\n  }\n  set playbackRate(rate) {\n    this._part.playbackRate = rate;\n  }\n  get probability() {\n    return this._part.probability;\n  }\n  set probability(prob) {\n    this._part.probability = prob;\n  }\n  get progress() {\n    return this._part.progress;\n  }\n  get humanize() {\n    return this._part.humanize;\n  }\n  set humanize(variation) {\n    this._part.humanize = variation;\n  }\n  /**\n   * The number of scheduled events\n   */\n  get length() {\n    return this._part.length;\n  }\n}","map":{"version":3,"names":["TicksClass","omitFromObject","optionsFromArguments","isArray","isString","Part","ToneEvent","Sequence","constructor","getDefaults","arguments","name","_part","callback","_seqCallback","bind","context","_events","_eventsArray","options","_subdivision","toTicks","subdivision","events","loop","loopStart","loopEnd","playbackRate","probability","humanize","mute","Object","assign","time","value","s","clear","_createSequence","_eventsUpdated","start","offset","_indexTime","stop","toSeconds","array","Proxy","get","target","property","set","isFinite","parseInt","_rescheduleSequence","startOffset","sequence","forEach","index","eventOffset","length","startTime","add","dispose","l","_loopStart","_loopEnd","rate","prob","progress","variation"],"sources":["../../../Tone/event/Sequence.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}