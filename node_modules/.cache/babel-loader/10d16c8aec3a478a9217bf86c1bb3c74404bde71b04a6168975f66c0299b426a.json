{"ast":null,"code":"import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Merge } from \"./Merge\";\nimport { Add } from \"../../signal/Add\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Subtract } from \"../../signal/Subtract\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * MidSideMerge merges the mid and side signal after they've been separated by [[MidSideSplit]]\n * ```\n * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right\n * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and right\n * ```\n * @category Component\n */\nexport class MidSideMerge extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(MidSideMerge.getDefaults(), arguments));\n    this.name = \"MidSideMerge\";\n    this.mid = new Gain({\n      context: this.context\n    });\n    this.side = new Gain({\n      context: this.context\n    });\n    this._left = new Add({\n      context: this.context\n    });\n    this._leftMult = new Multiply({\n      context: this.context,\n      value: Math.SQRT1_2\n    });\n    this._right = new Subtract({\n      context: this.context\n    });\n    this._rightMult = new Multiply({\n      context: this.context,\n      value: Math.SQRT1_2\n    });\n    this._merge = this.output = new Merge({\n      context: this.context\n    });\n    this.mid.fan(this._left);\n    this.side.connect(this._left.addend);\n    this.mid.connect(this._right);\n    this.side.connect(this._right.subtrahend);\n    this._left.connect(this._leftMult);\n    this._right.connect(this._rightMult);\n    this._leftMult.connect(this._merge, 0, 0);\n    this._rightMult.connect(this._merge, 0, 1);\n  }\n  dispose() {\n    super.dispose();\n    this.mid.dispose();\n    this.side.dispose();\n    this._leftMult.dispose();\n    this._rightMult.dispose();\n    this._left.dispose();\n    this._right.dispose();\n    return this;\n  }\n}","map":{"version":3,"names":["ToneAudioNode","Merge","Add","Multiply","Subtract","Gain","optionsFromArguments","MidSideMerge","constructor","getDefaults","arguments","name","mid","context","side","_left","_leftMult","value","Math","SQRT1_2","_right","_rightMult","_merge","output","fan","connect","addend","subtrahend","dispose"],"sources":["../../../../Tone/component/channel/MidSideMerge.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,aAAa,QAA8B,kCAAkC;AACtF,SAASC,KAAK,QAAQ,SAAS;AAC/B,SAASC,GAAG,QAAQ,kBAAkB;AACtC,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,IAAI,QAAQ,yBAAyB;AAC9C,SAASC,oBAAoB,QAAQ,0BAA0B;AAI/D;;;;;;;;AAQA,OAAM,MAAOC,YAAa,SAAQP,aAAkC;EAkDnEQ,YAAA;IACC,KAAK,CAACF,oBAAoB,CAACC,YAAY,CAACE,WAAW,EAAE,EAAEC,SAAS,CAAC,CAAC;IAjD1D,KAAAC,IAAI,GAAW,cAAc;IAkDrC,IAAI,CAACC,GAAG,GAAG,IAAIP,IAAI,CAAC;MAAEQ,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;IAC9C,IAAI,CAACC,IAAI,GAAG,IAAIT,IAAI,CAAC;MAAEQ,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;IAC/C,IAAI,CAACE,KAAK,GAAG,IAAIb,GAAG,CAAC;MAAEW,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;IAC/C,IAAI,CAACG,SAAS,GAAG,IAAIb,QAAQ,CAAC;MAC7BU,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBI,KAAK,EAAEC,IAAI,CAACC;KACZ,CAAC;IACF,IAAI,CAACC,MAAM,GAAG,IAAIhB,QAAQ,CAAC;MAAES,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;IACrD,IAAI,CAACQ,UAAU,GAAG,IAAIlB,QAAQ,CAAC;MAC9BU,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBI,KAAK,EAAEC,IAAI,CAACC;KACZ,CAAC;IACF,IAAI,CAACG,MAAM,GAAG,IAAI,CAACC,MAAM,GAAG,IAAItB,KAAK,CAAC;MAAEY,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;IAEhE,IAAI,CAACD,GAAG,CAACY,GAAG,CAAC,IAAI,CAACT,KAAK,CAAC;IACxB,IAAI,CAACD,IAAI,CAACW,OAAO,CAAC,IAAI,CAACV,KAAK,CAACW,MAAM,CAAC;IACpC,IAAI,CAACd,GAAG,CAACa,OAAO,CAAC,IAAI,CAACL,MAAM,CAAC;IAC7B,IAAI,CAACN,IAAI,CAACW,OAAO,CAAC,IAAI,CAACL,MAAM,CAACO,UAAU,CAAC;IACzC,IAAI,CAACZ,KAAK,CAACU,OAAO,CAAC,IAAI,CAACT,SAAS,CAAC;IAClC,IAAI,CAACI,MAAM,CAACK,OAAO,CAAC,IAAI,CAACJ,UAAU,CAAC;IACpC,IAAI,CAACL,SAAS,CAACS,OAAO,CAAC,IAAI,CAACH,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;IACzC,IAAI,CAACD,UAAU,CAACI,OAAO,CAAC,IAAI,CAACH,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;EAC3C;EAEAM,OAAOA,CAAA;IACN,KAAK,CAACA,OAAO,EAAE;IACf,IAAI,CAAChB,GAAG,CAACgB,OAAO,EAAE;IAClB,IAAI,CAACd,IAAI,CAACc,OAAO,EAAE;IACnB,IAAI,CAACZ,SAAS,CAACY,OAAO,EAAE;IACxB,IAAI,CAACP,UAAU,CAACO,OAAO,EAAE;IACzB,IAAI,CAACb,KAAK,CAACa,OAAO,EAAE;IACpB,IAAI,CAACR,MAAM,CAACQ,OAAO,EAAE;IACrB,OAAO,IAAI;EACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}