{"ast":null,"code":"import { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Negate } from \"../signal/Negate\";\nimport { Signal } from \"../signal/Signal\";\n/**\n * Subtract the signal connected to the input is subtracted from the signal connected\n * The subtrahend.\n *\n * @example\n * // subtract a scalar from a signal\n * const sub = new Tone.Subtract(1);\n * const sig = new Tone.Signal(4).connect(sub);\n * // the output of sub is 3.\n * @example\n * // subtract two signals\n * const sub = new Tone.Subtract();\n * const sigA = new Tone.Signal(10);\n * const sigB = new Tone.Signal(2.5);\n * sigA.connect(sub);\n * sigB.connect(sub.subtrahend);\n * // output of sub is 7.5\n * @category Signal\n */\nexport class Subtract extends Signal {\n  constructor() {\n    super(Object.assign(optionsFromArguments(Subtract.getDefaults(), arguments, [\"value\"])));\n    this.override = false;\n    this.name = \"Subtract\";\n    /**\n     * the summing node\n     */\n    this._sum = new Gain({\n      context: this.context\n    });\n    this.input = this._sum;\n    this.output = this._sum;\n    /**\n     * Negate the input of the second input before connecting it to the summing node.\n     */\n    this._neg = new Negate({\n      context: this.context\n    });\n    /**\n     * The value which is subtracted from the main signal\n     */\n    this.subtrahend = this._param;\n    connectSeries(this._constantSource, this._neg, this._sum);\n  }\n  static getDefaults() {\n    return Object.assign(Signal.getDefaults(), {\n      value: 0\n    });\n  }\n  dispose() {\n    super.dispose();\n    this._neg.dispose();\n    this._sum.dispose();\n    return this;\n  }\n}","map":{"version":3,"names":["connectSeries","Gain","optionsFromArguments","Negate","Signal","Subtract","constructor","Object","assign","getDefaults","arguments","override","name","_sum","context","input","output","_neg","subtrahend","_param","_constantSource","value","dispose"],"sources":["../../../Tone/signal/Subtract.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,aAAa,QAAQ,+BAA+B;AAC7D,SAASC,IAAI,QAAQ,sBAAsB;AAE3C,SAASC,oBAAoB,QAAQ,uBAAuB;AAC5D,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,MAAM,QAAuB,kBAAkB;AAExD;;;;;;;;;;;;;;;;;;;AAmBA,OAAM,MAAOC,QAAS,SAAQD,MAAM;EA6BnCE,YAAA;IACC,KAAK,CAACC,MAAM,CAACC,MAAM,CAACN,oBAAoB,CAACG,QAAQ,CAACI,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IA5BzF,KAAAC,QAAQ,GAAG,KAAK;IAEP,KAAAC,IAAI,GAAW,UAAU;IAElC;;;IAGQ,KAAAC,IAAI,GAAS,IAAIZ,IAAI,CAAC;MAAEa,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;IAC/C,KAAAC,KAAK,GAAS,IAAI,CAACF,IAAI;IACvB,KAAAG,MAAM,GAAS,IAAI,CAACH,IAAI;IAEjC;;;IAGQ,KAAAI,IAAI,GAAW,IAAId,MAAM,CAAC;MAAEW,OAAO,EAAE,IAAI,CAACA;IAAO,CAAE,CAAC;IAE5D;;;IAGA,KAAAI,UAAU,GAAoB,IAAI,CAACC,MAAM;IAWxCnB,aAAa,CAAC,IAAI,CAACoB,eAAe,EAAE,IAAI,CAACH,IAAI,EAAE,IAAI,CAACJ,IAAI,CAAC;EAC1D;EAEA,OAAOJ,WAAWA,CAAA;IACjB,OAAOF,MAAM,CAACC,MAAM,CAACJ,MAAM,CAACK,WAAW,EAAE,EAAE;MAC1CY,KAAK,EAAE;KACP,CAAC;EACH;EAEAC,OAAOA,CAAA;IACN,KAAK,CAACA,OAAO,EAAE;IACf,IAAI,CAACL,IAAI,CAACK,OAAO,EAAE;IACnB,IAAI,CAACT,IAAI,CAACS,OAAO,EAAE;IACnB,OAAO,IAAI;EACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}