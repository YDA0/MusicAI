{"ast":null,"code":"import { Signal } from \"../../signal/Signal\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { TickParam } from \"./TickParam\";\n/**\n * TickSignal extends Tone.Signal, but adds the capability\n * to calculate the number of elapsed ticks. exponential and target curves\n * are approximated with multiple linear ramps.\n *\n * Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos,\n * for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)\n * describing integrating timing functions for tempo calculations.\n */\nexport class TickSignal extends Signal {\n  constructor() {\n    super(optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"]));\n    this.name = \"TickSignal\";\n    const options = optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"]);\n    this.input = this._param = new TickParam({\n      context: this.context,\n      convert: options.convert,\n      multiplier: options.multiplier,\n      param: this._constantSource.offset,\n      units: options.units,\n      value: options.value\n    });\n  }\n  static getDefaults() {\n    return Object.assign(Signal.getDefaults(), {\n      multiplier: 1,\n      units: \"hertz\",\n      value: 1\n    });\n  }\n  ticksToTime(ticks, when) {\n    return this._param.ticksToTime(ticks, when);\n  }\n  timeToTicks(duration, when) {\n    return this._param.timeToTicks(duration, when);\n  }\n  getTimeOfTick(tick) {\n    return this._param.getTimeOfTick(tick);\n  }\n  getDurationOfTicks(ticks, time) {\n    return this._param.getDurationOfTicks(ticks, time);\n  }\n  getTicksAtTime(time) {\n    return this._param.getTicksAtTime(time);\n  }\n  /**\n   * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.\n   */\n  get multiplier() {\n    return this._param.multiplier;\n  }\n  set multiplier(m) {\n    this._param.multiplier = m;\n  }\n  dispose() {\n    super.dispose();\n    this._param.dispose();\n    return this;\n  }\n}","map":{"version":3,"names":["Signal","optionsFromArguments","TickParam","TickSignal","constructor","getDefaults","arguments","name","options","input","_param","context","convert","multiplier","param","_constantSource","offset","units","value","Object","assign","ticksToTime","ticks","when","timeToTicks","duration","getTimeOfTick","tick","getDurationOfTicks","time","getTicksAtTime","m","dispose"],"sources":["../../../../Tone/core/clock/TickSignal.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,MAAM,QAAuB,qBAAqB;AAG3D,SAASC,oBAAoB,QAAQ,kBAAkB;AACvD,SAASC,SAAS,QAAQ,aAAa;AAOvC;;;;;;;;;AASA,OAAM,MAAOC,UAA6C,SAAQH,MAAgB;EAejFI,YAAA;IAEC,KAAK,CAACH,oBAAoB,CAACE,UAAU,CAACE,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;IAfnE,KAAAC,IAAI,GAAW,YAAY;IAgBnC,MAAMC,OAAO,GAAGP,oBAAoB,CAACE,UAAU,CAACE,WAAW,EAAE,EAAEC,SAAS,EAAE,CAAC,OAAO,CAAC,CAAC;IAEpF,IAAI,CAACG,KAAK,GAAG,IAAI,CAACC,MAAM,GAAG,IAAIR,SAAS,CAAC;MACxCS,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,OAAO,EAAEJ,OAAO,CAACI,OAAO;MACxBC,UAAU,EAAEL,OAAO,CAACK,UAAU;MAC9BC,KAAK,EAAE,IAAI,CAACC,eAAe,CAACC,MAAM;MAClCC,KAAK,EAAET,OAAO,CAACS,KAAK;MACpBC,KAAK,EAAEV,OAAO,CAACU;KACf,CAAC;EACH;EAEA,OAAOb,WAAWA,CAAA;IACjB,OAAOc,MAAM,CAACC,MAAM,CAACpB,MAAM,CAACK,WAAW,EAAE,EAAE;MAC1CQ,UAAU,EAAE,CAAC;MACbI,KAAK,EAAE,OAAO;MACdC,KAAK,EAAE;KACP,CAAC;EACH;EAEAG,WAAWA,CAACC,KAAY,EAAEC,IAAU;IACnC,OAAO,IAAI,CAACb,MAAM,CAACW,WAAW,CAACC,KAAK,EAAEC,IAAI,CAAC;EAC5C;EAEAC,WAAWA,CAACC,QAAc,EAAEF,IAAU;IACrC,OAAO,IAAI,CAACb,MAAM,CAACc,WAAW,CAACC,QAAQ,EAAEF,IAAI,CAAC;EAC/C;EAEAG,aAAaA,CAACC,IAAW;IACxB,OAAO,IAAI,CAACjB,MAAM,CAACgB,aAAa,CAACC,IAAI,CAAC;EACvC;EAEAC,kBAAkBA,CAACN,KAAY,EAAEO,IAAU;IAC1C,OAAO,IAAI,CAACnB,MAAM,CAACkB,kBAAkB,CAACN,KAAK,EAAEO,IAAI,CAAC;EACnD;EAEAC,cAAcA,CAACD,IAAU;IACxB,OAAO,IAAI,CAACnB,MAAM,CAACoB,cAAc,CAACD,IAAI,CAAC;EACxC;EAEA;;;EAGA,IAAIhB,UAAUA,CAAA;IACb,OAAO,IAAI,CAACH,MAAM,CAACG,UAAU;EAC9B;EACA,IAAIA,UAAUA,CAACkB,CAAS;IACvB,IAAI,CAACrB,MAAM,CAACG,UAAU,GAAGkB,CAAC;EAC3B;EAEAC,OAAOA,CAAA;IACN,KAAK,CAACA,OAAO,EAAE;IACf,IAAI,CAACtB,MAAM,CAACsB,OAAO,EAAE;IACrB,OAAO,IAAI;EACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}