{"ast":null,"code":"export default {\n  name: 'ImageScrollPage',\n  data() {\n    return {\n      images: [{\n        src: '001.png',\n        alt: 'Image 1'\n      }, {\n        src: '002.png',\n        alt: 'Image 2'\n      }, {\n        src: '003.png',\n        alt: 'Image 3'\n      }, {\n        src: '004.png',\n        alt: 'Image 4'\n      }, {\n        src: '005.png',\n        alt: 'Image 5'\n      }, {\n        src: '006.png',\n        alt: 'Image 6'\n      }, {\n        src: '007.png',\n        alt: 'Image 7'\n      }, {\n        src: '008.png',\n        alt: 'Image 8'\n      }],\n      visibleImages: [],\n      startIndex: 0,\n      endIndex: 2\n    };\n  },\n  mounted() {\n    this.updateVisibleImages();\n  },\n  methods: {\n    updateVisibleImages() {\n      this.visibleImages = this.images.slice(this.startIndex, this.endIndex + 1);\n    },\n    scrollLeft() {\n      if (this.startIndex > 0) {\n        this.startIndex--;\n        this.endIndex--;\n        this.updateVisibleImages();\n      }\n    },\n    scrollRight() {\n      if (this.endIndex < this.images.length - 1) {\n        this.startIndex++;\n        this.endIndex++;\n        this.updateVisibleImages();\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","images","src","alt","visibleImages","startIndex","endIndex","mounted","updateVisibleImages","methods","slice","scrollLeft","scrollRight","length"],"sources":["/Users/yundayoung/Desktop/workspace/MUSICAI/src/views/main/main.vue"],"sourcesContent":["<template>\n    <div class=\"image-scroll\">\n        <h1>Horizontal Image Scroll</h1>\n        <div class=\"image-container\" ref=\"imageContainer\">\n            <button class=\"arrow-button left\" @click=\"scrollLeft\">&lt;</button>\n            <div class=\"scroll-wrapper\">\n                <div class=\"image-item\" v-for=\"(image, index) in visibleImages\" :key=\"index\">\n                    <img :src=\"image.src\" :alt=\"image.alt\">\n                </div>\n            </div>\n            <button class=\"arrow-button right\" @click=\"scrollRight\">&gt;</button>\n        </div>\n    </div>\n</template>\n  \n<script>\nexport default {\n    name: 'ImageScrollPage',\n    data() {\n        return {\n            images: [\n                { src: '001.png', alt: 'Image 1' },\n                { src: '002.png', alt: 'Image 2' },\n                { src: '003.png', alt: 'Image 3' },\n                { src: '004.png', alt: 'Image 4' },\n                { src: '005.png', alt: 'Image 5' },\n                { src: '006.png', alt: 'Image 6' },\n                { src: '007.png', alt: 'Image 7' },\n                { src: '008.png', alt: 'Image 8' }\n\n            ],\n            visibleImages: [],\n            startIndex: 0,\n            endIndex: 2\n        };\n    },\n    mounted() {\n        this.updateVisibleImages();\n    },\n    methods: {\n        updateVisibleImages() {\n            this.visibleImages = this.images.slice(this.startIndex, this.endIndex + 1);\n        },\n        scrollLeft() {\n            if (this.startIndex > 0) {\n                this.startIndex--;\n                this.endIndex--;\n                this.updateVisibleImages();\n            }\n        },\n        scrollRight() {\n            if (this.endIndex < this.images.length - 1) {\n                this.startIndex++;\n                this.endIndex++;\n                this.updateVisibleImages();\n            }\n        }\n    }\n};\n</script>\n  \n<style>\n.image-scroll {\n    text-align: center;\n}\n\n.image-container {\n    position: relative;\n    overflow: hidden;\n    white-space: nowrap;\n    margin-left: 100px;\n    margin-right: 50px;\n}\n\n.scroll-wrapper {\n    display: flex;\n    justify-content: center;\n    overflow-x: auto;\n    scroll-behavior: smooth;\n    scroll-snap-type: x mandatory;\n    -webkit-overflow-scrolling: touch;\n    padding-bottom: 10px;\n}\n\n.image-item {\n    scroll-snap-align: center;\n    flex: 0 0 auto;\n    margin-right: 20px;\n    transition: all 0.3s ease;\n}\n\n.image-item img {\n    width: 200px;\n    height: 200px;\n    object-fit: cover;\n}\n\n.arrow-button {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    font-size: 24px;\n    background-color: transparent;\n    border: none;\n    color: #333;\n    cursor: pointer;\n    padding: 5px;\n    z-index: 1;\n}\n\n.arrow-button.left {\n    left: 10px;\n}\n\n.arrow-button.right {\n    right: 10px;\n}\n</style>\n  "],"mappings":"AAgBA,eAAe;EACXA,IAAI,EAAE,iBAAiB;EACvBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,MAAM,EAAE,CACJ;QAAEC,GAAG,EAAE,SAAS;QAAEC,GAAG,EAAE;MAAU,CAAC,EAClC;QAAED,GAAG,EAAE,SAAS;QAAEC,GAAG,EAAE;MAAU,CAAC,EAClC;QAAED,GAAG,EAAE,SAAS;QAAEC,GAAG,EAAE;MAAU,CAAC,EAClC;QAAED,GAAG,EAAE,SAAS;QAAEC,GAAG,EAAE;MAAU,CAAC,EAClC;QAAED,GAAG,EAAE,SAAS;QAAEC,GAAG,EAAE;MAAU,CAAC,EAClC;QAAED,GAAG,EAAE,SAAS;QAAEC,GAAG,EAAE;MAAU,CAAC,EAClC;QAAED,GAAG,EAAE,SAAS;QAAEC,GAAG,EAAE;MAAU,CAAC,EAClC;QAAED,GAAG,EAAE,SAAS;QAAEC,GAAG,EAAE;MAAU,EAEpC;MACDC,aAAa,EAAE,EAAE;MACjBC,UAAU,EAAE,CAAC;MACbC,QAAQ,EAAE;IACd,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN,IAAI,CAACC,mBAAmB,EAAE;EAC9B,CAAC;EACDC,OAAO,EAAE;IACLD,mBAAmBA,CAAA,EAAG;MAClB,IAAI,CAACJ,aAAY,GAAI,IAAI,CAACH,MAAM,CAACS,KAAK,CAAC,IAAI,CAACL,UAAU,EAAE,IAAI,CAACC,QAAO,GAAI,CAAC,CAAC;IAC9E,CAAC;IACDK,UAAUA,CAAA,EAAG;MACT,IAAI,IAAI,CAACN,UAAS,GAAI,CAAC,EAAE;QACrB,IAAI,CAACA,UAAU,EAAE;QACjB,IAAI,CAACC,QAAQ,EAAE;QACf,IAAI,CAACE,mBAAmB,EAAE;MAC9B;IACJ,CAAC;IACDI,WAAWA,CAAA,EAAG;MACV,IAAI,IAAI,CAACN,QAAO,GAAI,IAAI,CAACL,MAAM,CAACY,MAAK,GAAI,CAAC,EAAE;QACxC,IAAI,CAACR,UAAU,EAAE;QACjB,IAAI,CAACC,QAAQ,EAAE;QACf,IAAI,CAACE,mBAAmB,EAAE;MAC9B;IACJ;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}